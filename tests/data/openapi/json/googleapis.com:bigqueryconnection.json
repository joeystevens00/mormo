{"openapi": "3.0.0", "servers": [{"url": "https://bigqueryconnection.googleapis.com/"}], "info": {"contact": {"name": "Google", "url": "https://google.com"}, "description": "Allows users to manage BigQuery connections to external data sources.", "license": {"name": "Creative Commons Attribution 3.0", "url": "http://creativecommons.org/licenses/by/3.0/"}, "termsOfService": "https://developers.google.com/terms/", "title": "BigQuery Connection", "version": "v1beta1", "x-apiClientRegistration": {"url": "https://console.developers.google.com"}, "x-logo": {"url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"}, "x-origin": [{"converter": {"url": "https://github.com/lucybot/api-spec-converter", "version": "2.7.31"}, "format": "google", "url": "https://bigqueryconnection.googleapis.com/$discovery/rest?version=v1beta1", "version": "v1"}], "x-preferred": true, "x-providerName": "googleapis.com", "x-serviceName": "bigqueryconnection"}, "externalDocs": {"url": "https://cloud.google.com/bigquery/"}, "tags": [{"name": "projects"}], "paths": {"/v1beta1/{name}": {"delete": {"description": "Deletes connection and associated credential.", "operationId": "bigqueryconnection.projects.locations.connections.delete", "parameters": [{"description": "Required. Name of the deleted connection, for example:\n`projects/{project_id}/locations/{location_id}/connections/{connection_id}`", "in": "path", "name": "name", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}], "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/Empty"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}, "get": {"description": "Returns specified connection.", "operationId": "bigqueryconnection.projects.locations.connections.get", "parameters": [{"description": "Required. Name of the requested connection, for example:\n`projects/{project_id}/locations/{location_id}/connections/{connection_id}`", "in": "path", "name": "name", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}], "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/Connection"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}, "parameters": [{"$ref": "#/components/parameters/uploadType"}, {"$ref": "#/components/parameters/fields"}, {"$ref": "#/components/parameters/callback"}, {"$ref": "#/components/parameters/oauth_token"}, {"$ref": "#/components/parameters/_.xgafv"}, {"$ref": "#/components/parameters/alt"}, {"$ref": "#/components/parameters/key"}, {"$ref": "#/components/parameters/access_token"}, {"$ref": "#/components/parameters/upload_protocol"}, {"$ref": "#/components/parameters/quotaUser"}, {"$ref": "#/components/parameters/prettyPrint"}], "patch": {"description": "Sets the credential for the specified connection.", "operationId": "bigqueryconnection.projects.locations.connections.updateCredential", "parameters": [{"description": "Required. Name of the connection, for example:\n`projects/{project_id}/locations/{location_id}/connections/{connection_id}/credential`", "in": "path", "name": "name", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConnectionCredential"}}}}, "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/Empty"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}}, "/v1beta1/{parent}/connections": {"get": {"description": "Returns a list of connections in the given project.", "operationId": "bigqueryconnection.projects.locations.connections.list", "parameters": [{"description": "Required. Parent resource name.\nMust be in the form: `projects/{project_id}/locations/{location_id}`", "in": "path", "name": "parent", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}, {"description": "Required. Maximum number of results per page.", "in": "query", "name": "maxResults", "schema": {"type": "integer"}}, {"description": "Page token.", "in": "query", "name": "pageToken", "schema": {"type": "string"}}], "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/ListConnectionsResponse"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}, "parameters": [{"$ref": "#/components/parameters/uploadType"}, {"$ref": "#/components/parameters/fields"}, {"$ref": "#/components/parameters/callback"}, {"$ref": "#/components/parameters/oauth_token"}, {"$ref": "#/components/parameters/_.xgafv"}, {"$ref": "#/components/parameters/alt"}, {"$ref": "#/components/parameters/key"}, {"$ref": "#/components/parameters/access_token"}, {"$ref": "#/components/parameters/upload_protocol"}, {"$ref": "#/components/parameters/quotaUser"}, {"$ref": "#/components/parameters/prettyPrint"}], "post": {"description": "Creates a new connection.", "operationId": "bigqueryconnection.projects.locations.connections.create", "parameters": [{"description": "Required. Parent resource name.\nMust be in the format `projects/{project_id}/locations/{location_id}`", "in": "path", "name": "parent", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}, {"description": "Optional. Connection id that should be assigned to the created connection.", "in": "query", "name": "connectionId", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Connection"}}}}, "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/Connection"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}}, "/v1beta1/{resource}:getIamPolicy": {"parameters": [{"$ref": "#/components/parameters/uploadType"}, {"$ref": "#/components/parameters/fields"}, {"$ref": "#/components/parameters/callback"}, {"$ref": "#/components/parameters/oauth_token"}, {"$ref": "#/components/parameters/_.xgafv"}, {"$ref": "#/components/parameters/alt"}, {"$ref": "#/components/parameters/key"}, {"$ref": "#/components/parameters/access_token"}, {"$ref": "#/components/parameters/upload_protocol"}, {"$ref": "#/components/parameters/quotaUser"}, {"$ref": "#/components/parameters/prettyPrint"}], "post": {"description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.", "operationId": "bigqueryconnection.projects.locations.connections.getIamPolicy", "parameters": [{"description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.", "in": "path", "name": "resource", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetIamPolicyRequest"}}}}, "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/Policy"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}}, "/v1beta1/{resource}:setIamPolicy": {"parameters": [{"$ref": "#/components/parameters/uploadType"}, {"$ref": "#/components/parameters/fields"}, {"$ref": "#/components/parameters/callback"}, {"$ref": "#/components/parameters/oauth_token"}, {"$ref": "#/components/parameters/_.xgafv"}, {"$ref": "#/components/parameters/alt"}, {"$ref": "#/components/parameters/key"}, {"$ref": "#/components/parameters/access_token"}, {"$ref": "#/components/parameters/upload_protocol"}, {"$ref": "#/components/parameters/quotaUser"}, {"$ref": "#/components/parameters/prettyPrint"}], "post": {"description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED", "operationId": "bigqueryconnection.projects.locations.connections.setIamPolicy", "parameters": [{"description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.", "in": "path", "name": "resource", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SetIamPolicyRequest"}}}}, "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/Policy"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}}, "/v1beta1/{resource}:testIamPermissions": {"parameters": [{"$ref": "#/components/parameters/uploadType"}, {"$ref": "#/components/parameters/fields"}, {"$ref": "#/components/parameters/callback"}, {"$ref": "#/components/parameters/oauth_token"}, {"$ref": "#/components/parameters/_.xgafv"}, {"$ref": "#/components/parameters/alt"}, {"$ref": "#/components/parameters/key"}, {"$ref": "#/components/parameters/access_token"}, {"$ref": "#/components/parameters/upload_protocol"}, {"$ref": "#/components/parameters/quotaUser"}, {"$ref": "#/components/parameters/prettyPrint"}], "post": {"description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.", "operationId": "bigqueryconnection.projects.locations.connections.testIamPermissions", "parameters": [{"description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.", "in": "path", "name": "resource", "required": true, "schema": {"type": "string"}, "x-reservedExpansion": true}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TestIamPermissionsRequest"}}}}, "responses": {"200": {"content": {"*/*": {"schema": {"$ref": "#/components/schemas/TestIamPermissionsResponse"}}}, "description": "Successful response"}}, "security": [{"Oauth2": ["https://www.googleapis.com/auth/bigquery"], "Oauth2c": ["https://www.googleapis.com/auth/bigquery"]}, {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]}], "tags": ["projects"]}}}, "components": {"parameters": {"_.xgafv": {"description": "V1 error format.", "in": "query", "name": "$.xgafv", "schema": {"enum": ["1", "2"], "type": "string"}}, "access_token": {"description": "OAuth access token.", "in": "query", "name": "access_token", "schema": {"type": "string"}}, "alt": {"description": "Data format for response.", "in": "query", "name": "alt", "schema": {"default": "json", "enum": ["json", "media", "proto"], "type": "string"}}, "callback": {"description": "JSONP", "in": "query", "name": "callback", "schema": {"type": "string"}}, "fields": {"description": "Selector specifying which fields to include in a partial response.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "key": {"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "in": "query", "name": "key", "schema": {"type": "string"}}, "oauth_token": {"description": "OAuth 2.0 token for the current user.", "in": "query", "name": "oauth_token", "schema": {"type": "string"}}, "prettyPrint": {"description": "Returns response with indentations and line breaks.", "in": "query", "name": "prettyPrint", "schema": {"default": true, "type": "boolean"}}, "quotaUser": {"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "in": "query", "name": "quotaUser", "schema": {"type": "string"}}, "uploadType": {"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "in": "query", "name": "uploadType", "schema": {"type": "string"}}, "upload_protocol": {"description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "in": "query", "name": "upload_protocol", "schema": {"type": "string"}}}, "schemas": {"AuditConfig": {"description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.", "properties": {"auditLogConfigs": {"description": "The configuration for logging of each type of permission.", "items": {"$ref": "#/components/schemas/AuditLogConfig"}, "type": "array"}, "service": {"description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.", "type": "string"}}, "type": "object"}, "AuditLogConfig": {"description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.", "properties": {"exemptedMembers": {"description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.", "items": {"type": "string"}, "type": "array"}, "logType": {"description": "The log type that this config enables.", "enum": ["LOG_TYPE_UNSPECIFIED", "ADMIN_READ", "DATA_WRITE", "DATA_READ"], "type": "string"}}, "type": "object"}, "Binding": {"description": "Associates `members` with a `role`.", "properties": {"condition": {"$ref": "#/components/schemas/Expr", "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."}, "members": {"description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n", "items": {"type": "string"}, "type": "array"}, "role": {"description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type": "string"}}, "type": "object"}, "CloudSqlCredential": {"description": "Credential info for the Cloud SQL.", "properties": {"password": {"description": "The password for the credential.", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}}, "type": "object"}, "CloudSqlProperties": {"description": "Connection properties specific to the Cloud SQL.", "properties": {"credential": {"$ref": "#/components/schemas/CloudSqlCredential", "description": "Input only. Cloud SQL credential."}, "database": {"description": "Database name.", "type": "string"}, "instanceId": {"description": "Cloud SQL instance ID in the form `project:location:instance`.", "type": "string"}, "type": {"description": "Type of the Cloud SQL database.", "enum": ["DATABASE_TYPE_UNSPECIFIED", "POSTGRES", "MYSQL"], "type": "string"}}, "type": "object"}, "Connection": {"description": "Configuration parameters to establish connection with an external data\nsource, except the credential attributes.", "properties": {"cloudSql": {"$ref": "#/components/schemas/CloudSqlProperties", "description": "Cloud SQL properties."}, "creationTime": {"description": "Output only. The creation timestamp of the connection.", "format": "int64", "type": "string"}, "description": {"description": "User provided description.", "type": "string"}, "friendlyName": {"description": "User provided display name for the connection.", "type": "string"}, "hasCredential": {"description": "Output only. True, if credential is configured for this connection.", "type": "boolean"}, "lastModifiedTime": {"description": "Output only. The last update timestamp of the connection.", "format": "int64", "type": "string"}, "name": {"description": "The resource name of the connection in the form of:\n`projects/{project_id}/locations/{location_id}/connections/{connection_id}`", "type": "string"}}, "type": "object"}, "ConnectionCredential": {"description": "Credential to use with a connection.", "properties": {"cloudSql": {"$ref": "#/components/schemas/CloudSqlCredential", "description": "Credential for Cloud SQL database."}}, "type": "object"}, "Empty": {"description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "properties": {}, "type": "object"}, "Expr": {"description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"", "properties": {"description": {"description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.", "type": "string"}, "expression": {"description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.", "type": "string"}, "location": {"description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.", "type": "string"}, "title": {"description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.", "type": "string"}}, "type": "object"}, "GetIamPolicyRequest": {"description": "Request message for `GetIamPolicy` method.", "properties": {"options": {"$ref": "#/components/schemas/GetPolicyOptions", "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`. This field is only used by Cloud IAM."}}, "type": "object"}, "GetPolicyOptions": {"description": "Encapsulates settings provided to GetIamPolicy.", "properties": {"requestedPolicyVersion": {"description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.", "format": "int32", "type": "integer"}}, "type": "object"}, "ListConnectionsResponse": {"description": "The response for ConnectionService.ListConnections.", "properties": {"connections": {"description": "List of connections.", "items": {"$ref": "#/components/schemas/Connection"}, "type": "array"}, "nextPageToken": {"description": "Next page token.", "type": "string"}}, "type": "object"}, "Policy": {"description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).", "properties": {"auditConfigs": {"description": "Specifies cloud audit logging configuration for this policy.", "items": {"$ref": "#/components/schemas/AuditConfig"}, "type": "array"}, "bindings": {"description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.", "items": {"$ref": "#/components/schemas/Binding"}, "type": "array"}, "etag": {"description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.", "format": "byte", "type": "string"}, "version": {"description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.", "format": "int32", "type": "integer"}}, "type": "object"}, "SetIamPolicyRequest": {"description": "Request message for `SetIamPolicy` method.", "properties": {"policy": {"$ref": "#/components/schemas/Policy", "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."}, "updateMask": {"description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.", "format": "google-fieldmask", "type": "string"}}, "type": "object"}, "TestIamPermissionsRequest": {"description": "Request message for `TestIamPermissions` method.", "properties": {"permissions": {"description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "TestIamPermissionsResponse": {"description": "Response message for `TestIamPermissions` method.", "properties": {"permissions": {"description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}}, "securitySchemes": {"Oauth2": {"description": "Oauth 2.0 implicit authentication", "flows": {"implicit": {"authorizationUrl": "https://accounts.google.com/o/oauth2/auth", "scopes": {"https://www.googleapis.com/auth/bigquery": "View and manage your data in Google BigQuery", "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"}}}, "type": "oauth2"}, "Oauth2c": {"description": "Oauth 2.0 accessCode authentication", "flows": {"authorizationCode": {"authorizationUrl": "https://accounts.google.com/o/oauth2/auth", "scopes": {"https://www.googleapis.com/auth/bigquery": "View and manage your data in Google BigQuery", "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"}, "tokenUrl": "https://accounts.google.com/o/oauth2/token"}}, "type": "oauth2"}}}}