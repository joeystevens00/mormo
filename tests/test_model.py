import tempfile
import json
import pytest
from mormo.model import BaseModel
from mormo.util import gen_string, cls_from_str, DB

from .conftest import generate_dicts

def test_cls_from_str():
    assert isinstance(cls_from_str('mormo.model.BaseModel'), type(BaseModel))


def test_base_model(test_object):
    test_object, expected = test_object
    tmp = tempfile.mktemp()
    test_object.to_file(tmp)
    with open(tmp, 'r') as f:
        assert json.load(f) == expected


def test_db_save(test_dbo, redis):
    test_dbo, expected = test_dbo
    test_dbo.save()
    assert json.loads(test_dbo._get(redis, test_dbo.uid))['data'] == expected


def test_load_by_id(test_dbo, redis):
    test_dbo, expected = test_dbo
    test_dbo.save()
    assert test_dbo.model == DB.load_model_from_uid(redis, uid=test_dbo.uid)
    assert test_dbo.model == DB(redis, uid=test_dbo.uid).model


def test_get_safe(test_object):
    test_object, expected = test_object
    k = '*'*10 # longer than any keys generated by test_dict
    assert test_object.get_safe(k) == None
    #assert test_object.get_safe(k, {}) == {}
